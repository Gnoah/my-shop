{"ast":null,"code":"import _slicedToArray from \"/root/Bureau/my-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/root/Bureau/my-shop/src/components/comment/Addcoms.jsx\";\nimport React, { useState } from 'react';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AffComs from './AffComs';\nimport './Addcom.css';\n\nvar Comment = function Comment(props) {\n  var initialFormState = [];\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      coms = _useState2[0],\n      setCom = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      compt = _useState4[0],\n      setCompt = _useState4[1];\n\n  var addCom = function addCom(coms, test) {\n    setCom(coms.concat([test]));\n  };\n\n  return React.createElement(\"button\", {\n    onClick: function onClick() {\n      confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            id: \"bt\",\n            className: \"custom-ui\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"fermer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            id: \"flot\",\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, \"X\")), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            id: \"coms\",\n            onSubmit: function onSubmit(b) {\n              b.preventDefault();\n              var test = document.forms['coms'].elements['input'].value; //  setCom(coms.concat([test]))\n\n              addCom(coms, test);\n              document.getElementById('io').innerHTML += test + '<br/>';\n              document.getElementById('entre').value = '';\n              setCompt(compt + 1);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            name: \"input\",\n            type: \"text\",\n            id: \"entre\",\n            placeholder: coms.commentaire,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            id: \"btcom\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"comment\"))), React.createElement(\"div\", {\n            id: \"io\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(AffComs, {\n            coms: coms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          })));\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"comment \", compt);\n};\n\nexport default Comment;","map":{"version":3,"sources":["/root/Bureau/my-shop/src/components/comment/Addcoms.jsx"],"names":["React","useState","confirmAlert","AffComs","Comment","props","initialFormState","coms","setCom","compt","setCompt","addCom","test","concat","customUI","onClose","b","preventDefault","document","forms","elements","value","getElementById","innerHTML","commentaire"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAO,iDAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,cAAP;;AAGA,IAAMC,OAAO,GAAE,SAATA,OAAS,CAAAC,KAAK,EAAI;AACpB,MAAMC,gBAAgB,GAAG,EAAzB;;AADoB,kBAEKL,QAAQ,CAACK,gBAAD,CAFb;AAAA;AAAA,MAEZC,IAFY;AAAA,MAENC,MAFM;;AAAA,mBAGQP,QAAQ,CAAC,CAAD,CAHhB;AAAA;AAAA,MAGZQ,KAHY;AAAA,MAGLC,QAHK;;AAIpB,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACJ,IAAD,EAAMK,IAAN,EAAe;AAC5BJ,IAAAA,MAAM,CAACD,IAAI,CAACM,MAAL,CAAY,CAACD,IAAD,CAAZ,CAAD,CAAN;AAED,GAHD;;AAOA,SAEQ;AACA,IAAA,OAAO,EAAE,mBAAI;AACTV,MAAAA,YAAY,CAAC;AACTY,QAAAA,QAAQ,EAAE,wBAAiB;AAAA,cAAdC,OAAc,QAAdA,OAAc;AACzB,iBACE;AAAK,YAAA,EAAE,EAAC,IAAR;AAAa,YAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAQ,YAAA,EAAE,EAAC,MAAX;AAAkB,YAAA,OAAO,EAAEA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAM,YAAA,EAAE,EAAC,MAAT;AACE,YAAA,QAAQ,EACN,kBAACC,CAAD,EAAK;AACHA,cAAAA,CAAC,CAACC,cAAF;AACA,kBAAIL,IAAI,GAACM,QAAQ,CAACC,KAAT,CAAe,MAAf,EAAuBC,QAAvB,CAAgC,OAAhC,EAAyCC,KAAlD,CAFG,CAGJ;;AACAV,cAAAA,MAAM,CAACJ,IAAD,EAAMK,IAAN,CAAN;AACCM,cAAAA,QAAQ,CAACI,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,IAAyCX,IAAI,GAAC,OAA9C;AACAM,cAAAA,QAAQ,CAACI,cAAT,CAAwB,OAAxB,EAAiCD,KAAjC,GAAuC,EAAvC;AACAX,cAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD,aAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAcI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,MAAzB;AAAgC,YAAA,EAAE,EAAC,OAAnC;AAA2C,YAAA,WAAW,EAAEF,IAAI,CAACiB,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,EAgBI;AAAQ,YAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhBJ,CADA,CAJF,EAyBE;AAAK,YAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAEjB,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CAzBF,CADF;AA+BD;AAjCQ,OAAD,CAAZ;AAmCH,KArCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAuCSE,KAvCT,CAFR;AA4CH,CAvDD;;AA2DA,eAAeL,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport { confirmAlert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AffComs from './AffComs'\nimport './Addcom.css'\n\n\nconst Comment= props => {\n    const initialFormState = []\n    const [ coms, setCom ] = useState(initialFormState)\n    const [ compt, setCompt ] = useState(0)\n    const addCom = (coms,test) => {\n      setCom(coms.concat([test]))\n\n    }\n    \n\n   \n    return(\n\n            <button\n            onClick={()=>{\n                confirmAlert({\n                    customUI: ({ onClose }) => {\n                      return (\n                        <div id=\"bt\" className='custom-ui'>\n                          <div className=\"fermer\">\n                            <button id=\"flot\" onClick={onClose}>X</button>\n                          </div>\n                          <div>\n                          <form id='coms'\n                            onSubmit={\n                              (b)=>{\n                                b.preventDefault()\n                                var test=document.forms['coms'].elements['input'].value\n                               //  setCom(coms.concat([test]))\n                               addCom(coms,test)\n                                document.getElementById('io').innerHTML+=test+'<br/>'\n                                document.getElementById('entre').value=''\n                                setCompt(compt+1)\n                              }\n                            }\n                          >\n                              \n                              <input name='input' type=\"text\" id='entre' placeholder={coms.commentaire}/>\n\n                              <button id=\"btcom\">comment</button>\n                              \n                          </form>\n                          </div>\n                          <div id='io'>\n                          <AffComs coms={coms}/>\n                          </div>\n                        </div>\n                      );\n                    }\n                  });\n            }}\n            > \n            comment {compt}</button>     \n    )   \n        \n}\n\n\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}